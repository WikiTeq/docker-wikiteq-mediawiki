name: Docker

on:
  push:
    # Only activate for `master` branch
    branches:
      - master
    # Plus for all tags
    tags:
      - '*'

  # Plus for any pull-requests
  pull_request:

env:
  IMAGE_NAME: mediawiki

jobs:
  # Run tests.
  # See also https://docs.docker.com/docker-hub/builds/automated-testing/
  test:
    runs-on: ubuntu-latest

    steps:
      - uses: actions/checkout@v2

      - name: Run tests
        run: ls
#        run: |
#          if [ -f docker-compose.test.yml ]; then
#            docker-compose --file docker-compose.test.yml build
#            docker-compose --file docker-compose.test.yml run sut
#          else
#            docker build . --file Dockerfile
#          fi

  # Push image to GitHub Packages.
  # See also https://docs.docker.com/docker-hub/builds/
  push:
    # Ensure test job passes before pushing image.
    needs: test

    runs-on: ubuntu-latest
    if: github.event_name == 'push' || github.event_name == 'pull_request'

    steps:
      - uses: actions/checkout@v2

      #- name: Build image
      #  run: docker build . --file Dockerfile --tag $IMAGE_NAME

      #- name: Log into registry
      #  run: echo "${{ secrets.GITHUB_TOKEN }}" | docker login ghcr.io -u ${{ github.actor }} --password-stdin

      - name: Push image
        run: |
          IMAGE_ID=ghcr.io/wikiteq/mediawiki
          BDATE=$(date +%Y%m%d)

          # Change all uppercase to lowercase, just in case
          IMAGE_ID=$(echo $IMAGE_ID | tr '[A-Z]' '[a-z]')

          # Strip git ref prefix from version and use it as suffix for version
          VERSION=$(echo "${{ github.ref }}" | sed -e 's,.*/\(.*\),\1,')

          # For pull requests just extract the PR number
          [ "$VERSION" == "merge" ] && [ "${{ github.event_name }}" == "pull_request" ] && VERSION=$(echo "${{ github.ref }}" | sed -e 's,.*/\(.*\)/merge,\1,')

          # Append PR branch name if it's a PR
          [ "${{ github.event_name }}" == "pull_request" ] && VERSION=$BDATE-$(echo ${{ github.head_ref }} | tr '\/' '-')-$VERSION

          # Strip "v" prefix from tag name if it's a tag
          # [[ "${{ github.ref }}" == "refs/tags/"* ]] && VERSION=$(echo $VERSION | sed -e 's/^v//')

          # Use Docker `latest` tag convention if it's a master branch build
          [ "$VERSION" == "master" ] && VERSION=latest

          echo IMAGE_ID=$IMAGE_ID
          echo VERSION=$VERSION
          echo headref=${{ github.head_ref }}

          #docker tag $IMAGE_NAME $IMAGE_ID:$VERSION
          #docker images
          #test123test
